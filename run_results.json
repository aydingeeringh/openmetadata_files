{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-12-07T14:35:22.062080Z", "invocation_id": "5ed299a8-a43c-43a9-bfd8-bfeb66b63c02", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:40.029400Z", "completed_at": "2024-12-07T14:34:40.042614Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:40.043591Z", "completed_at": "2024-12-07T14:34:43.364809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.3380119800567627, "adapter_response": {"_message": "SELECT 903", "code": "SELECT", "rows_affected": 903}, "message": "SELECT 903", "failures": null, "unique_id": "model.postgres_example.raw_person", "compiled": true, "compiled_code": "\n\nSELECT\n  ROW_NUMBER() OVER (ORDER BY \"FirstName\", \"Surname\", \"DateOfBirth\") as \"person_id\",\n  \"Title\" as \"title\",\n  \"Gender\" as \"gender\",\n  \"FirstName\" as \"firstname\",\n  \"Initials\" as \"initials\",\n  \"Surname\" as \"surname\",\n  \"DateOfBirth\" as \"dateofbirth\",\n  \"IdentificationValue\" as \"identificationvalue\",\n  \"AddressLine1\" as \"addressline1\",\n  \"AddressLine2\" as \"addressline2\",\n  \"AddressLine3\" as \"addressline3\" \nFROM \"test_harness\".\"public\".\"test_data\"", "relation_name": "\"test_harness\".\"models\".\"raw_person\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:43.370795Z", "completed_at": "2024-12-07T14:34:43.370798Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:43.371061Z", "completed_at": "2024-12-07T14:34:46.072918Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.703504800796509, "adapter_response": {"_message": "INSERT 6", "code": "INSERT", "rows_affected": 6}, "message": "INSERT 6", "failures": null, "unique_id": "seed.postgres_example.refgender", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:46.076833Z", "completed_at": "2024-12-07T14:34:46.076835Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:46.077153Z", "completed_at": "2024-12-07T14:34:48.702855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.6278111934661865, "adapter_response": {"_message": "INSERT 31", "code": "INSERT", "rows_affected": 31}, "message": "INSERT 31", "failures": null, "unique_id": "seed.postgres_example.reftitlegender", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:48.711374Z", "completed_at": "2024-12-07T14:34:48.721519Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:48.722080Z", "completed_at": "2024-12-07T14:34:50.996031Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4707419872283936, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 803 results, configured to fail if != 0", "failures": 803, "unique_id": "test.postgres_example.id_check_raw_person_identificationvalue.dc97173cfb", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where not (\n        identificationvalue ~ '^[A-Z]\\d{8}$'\n        or identificationvalue ~ '^[1-3]\\d{8}$'\n        or identificationvalue ~ '^[5-9]\\d{8}$'\n    )\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"id_check_raw_person_identificationvalue\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:51.182625Z", "completed_at": "2024-12-07T14:34:51.187664Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:51.187987Z", "completed_at": "2024-12-07T14:34:53.416370Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.418159008026123, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 362 results, configured to fail if != 0", "failures": 362, "unique_id": "test.postgres_example.id_dob_check_raw_person_identificationvalue__dateofbirth.d91804c2ed", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        -- Ensure ID is not null and has correct length\n        (identificationvalue is not null and\n        -- Ensure DOB is not null and is a valid date\n        dateofbirth is not null and dateofbirth::date is not null and\n        -- Compare ID prefix with formatted DOB\n        substring(identificationvalue, 1, 6) != to_char(dateofbirth::date, 'YYMMDD'))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"id_dob_check_raw_person_identificationvalue__dateofbirth\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:53.605557Z", "completed_at": "2024-12-07T14:34:53.619559Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:53.620234Z", "completed_at": "2024-12-07T14:34:55.859636Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4389188289642334, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.postgres_example.not_null_raw_person_person_id.d57b360f75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect *\nfrom \"test_harness\".\"models\".\"raw_person\"\nwhere person_id is null\n\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"not_null_raw_person_person_id\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:56.045160Z", "completed_at": "2024-12-07T14:34:56.050044Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:56.050651Z", "completed_at": "2024-12-07T14:34:58.270909Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4087538719177246, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 5 results, configured to fail if != 0", "failures": 5, "unique_id": "test.postgres_example.spaces_check_raw_person_addressline1.be2d09f814", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        addressline1 is not null\n        and addressline1 != \n            TRIM(REGEXP_REPLACE(COALESCE(addressline1, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_addressline1\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:34:58.459377Z", "completed_at": "2024-12-07T14:34:58.467897Z"}, {"name": "execute", "started_at": "2024-12-07T14:34:58.468673Z", "completed_at": "2024-12-07T14:35:00.704012Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4305150508880615, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 5 results, configured to fail if != 0", "failures": 5, "unique_id": "test.postgres_example.spaces_check_raw_person_addressline2.3ce7d1c257", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        addressline2 is not null\n        and addressline2 != \n            TRIM(REGEXP_REPLACE(COALESCE(addressline2, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_addressline2\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:00.893886Z", "completed_at": "2024-12-07T14:35:00.902305Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:00.902931Z", "completed_at": "2024-12-07T14:35:03.151690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4433979988098145, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 7 results, configured to fail if != 0", "failures": 7, "unique_id": "test.postgres_example.spaces_check_raw_person_addressline3.d493a309ac", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        addressline3 is not null\n        and addressline3 != \n            TRIM(REGEXP_REPLACE(COALESCE(addressline3, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_addressline3\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:03.340729Z", "completed_at": "2024-12-07T14:35:03.346945Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:03.347249Z", "completed_at": "2024-12-07T14:35:05.577466Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4210031032562256, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 6 results, configured to fail if != 0", "failures": 6, "unique_id": "test.postgres_example.spaces_check_raw_person_firstname.725bb208fa", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        firstname is not null\n        and firstname != \n            TRIM(REGEXP_REPLACE(COALESCE(firstname, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_firstname\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:05.764099Z", "completed_at": "2024-12-07T14:35:05.769740Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:05.770130Z", "completed_at": "2024-12-07T14:35:08.004085Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4260780811309814, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 2 results, configured to fail if != 0", "failures": 2, "unique_id": "test.postgres_example.spaces_check_raw_person_gender.a8c47018d3", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        gender is not null\n        and gender != \n            TRIM(REGEXP_REPLACE(COALESCE(gender, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_gender\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:08.195821Z", "completed_at": "2024-12-07T14:35:08.203497Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:08.204103Z", "completed_at": "2024-12-07T14:35:10.439943Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4297800064086914, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 2 results, configured to fail if != 0", "failures": 2, "unique_id": "test.postgres_example.spaces_check_raw_person_identificationvalue.ab9cf56c56", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        identificationvalue is not null\n        and identificationvalue != \n            TRIM(REGEXP_REPLACE(COALESCE(identificationvalue, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_identificationvalue\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:10.630521Z", "completed_at": "2024-12-07T14:35:10.639520Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:10.640251Z", "completed_at": "2024-12-07T14:35:12.873922Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4310038089752197, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 4 results, configured to fail if != 0", "failures": 4, "unique_id": "test.postgres_example.spaces_check_raw_person_initials.d888edfc65", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        initials is not null\n        and initials != \n            TRIM(REGEXP_REPLACE(COALESCE(initials, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_initials\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:13.065128Z", "completed_at": "2024-12-07T14:35:13.071554Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:13.072174Z", "completed_at": "2024-12-07T14:35:15.313727Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4343349933624268, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 4 results, configured to fail if != 0", "failures": 4, "unique_id": "test.postgres_example.spaces_check_raw_person_surname.2eca925e08", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        surname is not null\n        and surname != \n            TRIM(REGEXP_REPLACE(COALESCE(surname, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_surname\""}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:15.503363Z", "completed_at": "2024-12-07T14:35:15.511089Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:15.511833Z", "completed_at": "2024-12-07T14:35:17.754297Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4367873668670654, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "Got 6 results, configured to fail if != 0", "failures": 6, "unique_id": "test.postgres_example.spaces_check_raw_person_title.933c96f33e", "compiled": true, "compiled_code": "\n\nwith failing_rows as (\n    select *\n    from \"test_harness\".\"models\".\"raw_person\"\n    where \n        title is not null\n        and title != \n            TRIM(REGEXP_REPLACE(COALESCE(title, ''), '\\s+', ' '))\n)\n\nselect * from failing_rows\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"spaces_check_raw_person_title\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-07T14:35:17.942088Z", "completed_at": "2024-12-07T14:35:17.951409Z"}, {"name": "execute", "started_at": "2024-12-07T14:35:17.951842Z", "completed_at": "2024-12-07T14:35:20.179415Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4240000247955322, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.postgres_example.unique_raw_person_person_id.12890fd1b5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    person_id as unique_field,\n    count(*) as n_records\n\nfrom \"test_harness\".\"models\".\"raw_person\"\nwhere person_id is not null\ngroup by person_id\nhaving count(*) > 1\n\n\n", "relation_name": "\"test_harness\".\"models_test_failures\".\"unique_raw_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres_example.parsing_person", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models\".\"parsing_person\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.id_check_parsing_person_identificationvalue.1f88aa9d9e", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"id_check_parsing_person_identificationvalue\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.not_null_parsing_person_person_id.ac27bf437a", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"not_null_parsing_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.unique_parsing_person_person_id.4b1e7ea03e", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"unique_parsing_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres_example.cleansing_person", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models\".\"cleansing_person\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.id_check_cleansing_person_identificationvalue.a41feaca50", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"id_check_cleansing_person_identificationvalue\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.not_null_cleansing_person_person_id.f1601e4101", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"not_null_cleansing_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.unique_cleansing_person_person_id.8306d2bcca", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"unique_cleansing_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres_example.enhancing_person", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models\".\"enhancing_person\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.id_check_enhancing_person_identificationvalue.477b6b7221", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"id_check_enhancing_person_identificationvalue\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.not_null_enhancing_person_person_id.e372073289", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"not_null_enhancing_person_person_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres_example.unique_enhancing_person_person_id.f185685f7f", "compiled": false, "compiled_code": null, "relation_name": "\"test_harness\".\"models_test_failures\".\"unique_enhancing_person_person_id\""}], "elapsed_time": 51.414422035217285, "args": {"profiles_dir": "/Users/aydingeeringh/.dbt", "show_resource_report": false, "use_colors": true, "indirect_selection": "eager", "introspect": true, "select": [], "exclude": [], "project_dir": "/Users/aydingeeringh/Developer/dbt/postgres_example", "warn_error_options": {"include": [], "exclude": []}, "empty": false, "log_path": "/Users/aydingeeringh/Developer/dbt/postgres_example/logs", "send_anonymous_usage_stats": true, "write_json": true, "log_level": "info", "require_explicit_package_overrides_for_builtin_materializations": true, "log_format": "default", "log_format_file": "debug", "which": "build", "exclude_resource_types": [], "strict_mode": false, "partial_parse_file_diff": true, "cache_selected_only": false, "version_check": true, "export_saved_queries": false, "quiet": false, "source_freshness_run_project_hooks": false, "populate_cache": true, "defer": false, "macro_debugging": false, "partial_parse": true, "enable_legacy_logger": false, "include_saved_query": false, "invocation_command": "dbt build", "printer_width": 80, "show": false, "static_parser": true, "favor_state": false, "log_file_max_bytes": 10485760, "print": true, "resource_types": [], "use_colors_file": true, "require_resource_names_without_spaces": false, "vars": {}, "log_level_file": "debug"}}